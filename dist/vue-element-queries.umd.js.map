{"version":3,"sources":["webpack://vue-element-queries/webpack/universalModuleDefinition","webpack://vue-element-queries/webpack/bootstrap","webpack://vue-element-queries/./node_modules/css-element-queries/src/ResizeSensor.js","webpack://vue-element-queries/./src/VueElementQuery.js","webpack://vue-element-queries/./src/index.js","webpack://vue-element-queries//Users/mattchaffe/.nvm/versions/node/v9.8.0/lib/node_modules/@vue/cli-service/lib/commands/build/entry-lib.js","webpack://vue-element-queries//Users/mattchaffe/.nvm/versions/node/v9.8.0/lib/node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA,KAAK,QAIL;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,0BAA0B;AACzC,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,kCAAkC;AACjD,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,OAAO;AAChD;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,YAAY;AAC/B,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,YAAY;AAC/B,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,SAAS,QAAQ,UAAU,WAAW,kBAAkB,aAAa,oBAAoB;AACrI,iDAAiD,SAAS,QAAQ,gBAAgB;;AAElF;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA,CAAC;;;;;;;;;;;;;;;AClOD;AACA;AACA;AACA,cAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,YAAY;AACzB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA,qBAAqB,YAAY;AACjC,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,YAAY;AACjC,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,aAAa;AAC3B,cAAc,SAAS;AACvB,cAAc;AACd;AACA;AACA,oDAAoD,OAAO;AAC3D;AACA;AACA;;AAEA;AACA;AACA,cAAc,cAAc;AAC5B,cAAc,SAAS;AACvB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,YAAY;AAC1B,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,YAAY;AAC1B,cAAc,SAAS;AACvB,cAAc;AACd;AACA;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,SAAS;AAC3C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;;;;;;ACtLA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;ACtBA;AACA;+EACA;AACA;;;;;;;;ACHA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"vue-element-queries.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-element-queries\"] = factory();\n\telse\n\t\troot[\"vue-element-queries\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"aYM4\");\n","/**\n * Copyright Marc J. Schmidt. See the LICENSE file at the top-level\n * directory of this distribution and at\n * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\n */\n;\n(function (root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(factory);\n    } else if (typeof exports === \"object\") {\n        module.exports = factory();\n    } else {\n        root.ResizeSensor = factory();\n    }\n}(this, function () {\n\n    //Make sure it does not throw in a SSR (Server Side Rendering) situation\n    if (typeof window === \"undefined\") {\n        return null;\n    }\n    // Only used for the dirty checking, so the event callback count is limted to max 1 call per fps per sensor.\n    // In combination with the event based resize sensor this saves cpu time, because the sensor is too fast and\n    // would generate too many unnecessary events.\n    var requestAnimationFrame = window.requestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        function (fn) {\n            return window.setTimeout(fn, 20);\n        };\n\n    /**\n     * Iterate over each of the provided element(s).\n     *\n     * @param {HTMLElement|HTMLElement[]} elements\n     * @param {Function}                  callback\n     */\n    function forEachElement(elements, callback){\n        var elementsType = Object.prototype.toString.call(elements);\n        var isCollectionTyped = ('[object Array]' === elementsType\n            || ('[object NodeList]' === elementsType)\n            || ('[object HTMLCollection]' === elementsType)\n            || ('[object Object]' === elementsType)\n            || ('undefined' !== typeof jQuery && elements instanceof jQuery) //jquery\n            || ('undefined' !== typeof Elements && elements instanceof Elements) //mootools\n        );\n        var i = 0, j = elements.length;\n        if (isCollectionTyped) {\n            for (; i < j; i++) {\n                callback(elements[i]);\n            }\n        } else {\n            callback(elements);\n        }\n    }\n\n    /**\n     * Class for dimension change detection.\n     *\n     * @param {Element|Element[]|Elements|jQuery} element\n     * @param {Function} callback\n     *\n     * @constructor\n     */\n    var ResizeSensor = function(element, callback) {\n        /**\n         *\n         * @constructor\n         */\n        function EventQueue() {\n            var q = [];\n            this.add = function(ev) {\n                q.push(ev);\n            };\n\n            var i, j;\n            this.call = function() {\n                for (i = 0, j = q.length; i < j; i++) {\n                    q[i].call();\n                }\n            };\n\n            this.remove = function(ev) {\n                var newQueue = [];\n                for(i = 0, j = q.length; i < j; i++) {\n                    if(q[i] !== ev) newQueue.push(q[i]);\n                }\n                q = newQueue;\n            }\n\n            this.length = function() {\n                return q.length;\n            }\n        }\n\n        /**\n         * @param {HTMLElement} element\n         * @param {String}      prop\n         * @returns {String|Number}\n         */\n        function getComputedStyle(element, prop) {\n            if (element.currentStyle) {\n                return element.currentStyle[prop];\n            } else if (window.getComputedStyle) {\n                return window.getComputedStyle(element, null).getPropertyValue(prop);\n            } else {\n                return element.style[prop];\n            }\n        }\n\n        /**\n         *\n         * @param {HTMLElement} element\n         * @param {Function}    resized\n         */\n        function attachResizeEvent(element, resized) {\n            if (!element.resizedAttached) {\n                element.resizedAttached = new EventQueue();\n                element.resizedAttached.add(resized);\n            } else if (element.resizedAttached) {\n                element.resizedAttached.add(resized);\n                return;\n            }\n\n            element.resizeSensor = document.createElement('div');\n            element.resizeSensor.className = 'resize-sensor';\n            var style = 'position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;';\n            var styleChild = 'position: absolute; left: 0; top: 0; transition: 0s;';\n\n            element.resizeSensor.style.cssText = style;\n            element.resizeSensor.innerHTML =\n                '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' +\n                    '<div style=\"' + styleChild + '\"></div>' +\n                '</div>' +\n                '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' +\n                    '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' +\n                '</div>';\n            element.appendChild(element.resizeSensor);\n\n            if (getComputedStyle(element, 'position') == 'static') {\n                element.style.position = 'relative';\n            }\n\n            var expand = element.resizeSensor.childNodes[0];\n            var expandChild = expand.childNodes[0];\n            var shrink = element.resizeSensor.childNodes[1];\n            var dirty, rafId, newWidth, newHeight;\n            var lastWidth = element.offsetWidth;\n            var lastHeight = element.offsetHeight;\n\n            var reset = function() {\n                expandChild.style.width = '100000px';\n                expandChild.style.height = '100000px';\n\n                expand.scrollLeft = 100000;\n                expand.scrollTop = 100000;\n\n                shrink.scrollLeft = 100000;\n                shrink.scrollTop = 100000;\n            };\n\n            reset();\n\n            var onResized = function() {\n                rafId = 0;\n\n                if (!dirty) return;\n\n                lastWidth = newWidth;\n                lastHeight = newHeight;\n\n                if (element.resizedAttached) {\n                    element.resizedAttached.call();\n                }\n            };\n\n            var onScroll = function() {\n                newWidth = element.offsetWidth;\n                newHeight = element.offsetHeight;\n                dirty = newWidth != lastWidth || newHeight != lastHeight;\n\n                if (dirty && !rafId) {\n                    rafId = requestAnimationFrame(onResized);\n                }\n\n                reset();\n            };\n\n            var addEvent = function(el, name, cb) {\n                if (el.attachEvent) {\n                    el.attachEvent('on' + name, cb);\n                } else {\n                    el.addEventListener(name, cb);\n                }\n            };\n\n            addEvent(expand, 'scroll', onScroll);\n            addEvent(shrink, 'scroll', onScroll);\n        }\n\n        forEachElement(element, function(elem){\n            attachResizeEvent(elem, callback);\n        });\n\n        this.detach = function(ev) {\n            ResizeSensor.detach(element, ev);\n        };\n    };\n\n    ResizeSensor.detach = function(element, ev) {\n        forEachElement(element, function(elem){\n            if(elem.resizedAttached && typeof ev == \"function\"){\n                elem.resizedAttached.remove(ev);\n                if(elem.resizedAttached.length()) return;\n            }\n            if (elem.resizeSensor) {\n                if (elem.contains(elem.resizeSensor)) {\n                    elem.removeChild(elem.resizeSensor);\n                }\n                delete elem.resizeSensor;\n                delete elem.resizedAttached;\n            }\n        });\n    };\n\n    return ResizeSensor;\n\n}));\n","export default class VueElementQuery {\n  /**\n   * Constructor for the class\n   * @param  {VueComponent} component\n   */\n  constructor (ResizeSensor, element) {\n    this.ResizeSensor = ResizeSensor\n    this.breakpoints = {\n      'min-width': [],\n      'max-width': []\n    }\n    this.init(element)\n  }\n\n  /**\n   * Initialize ElementQuery by crawling stylesheets for breakpoints,\n   * setting a resize watcher on the element, and firing the initial resize\n   * event.\n   * @param  {HTMLElement}  element\n   * @return {void}\n   */\n  init (element) {\n    this.setBreakpoints(element)\n    this.watchElement(element)\n    this.setInitialResize(element)\n  }\n\n  /**\n   * Fire the initial resize event\n   * @param {HTMLElement} element\n   */\n  setInitialResize (element) {\n    element.resizedAttached.call()\n  }\n\n  /**\n   * Create a watcher on the element width\n   * @param {HTMLElement} element\n   * @return {void}\n   */\n  watchElement (element) {\n    new this.ResizeSensor(element, () => {\n      element.setAttribute('min-width', this.setMinWidth(element.clientWidth))\n      element.setAttribute('max-width', this.setMaxWidth(element.clientWidth))\n    })\n  }\n\n  /**\n   * Crawl the document stylesheets and capture all breakpoints for\n   * this element\n   * @param {HTMLElement} element\n   */\n  setBreakpoints (element) {\n    this.crawlStylesheets(document, rules => {\n      this.readRules(rules, rule => {\n        if (this.matchesScope(element, rule.selectorText)) {\n          this.breakpoints[rule.selector].push(rule.value)\n        }\n      })\n    })\n  }\n\n  /**\n   * Determine if an element has a scoped stylesheet. This prevents\n   * us from crawling stylesheet rules that aren't relevant.\n   * @param  @param {HTMLElement} element\n   * @param  {String} selectorText\n   * @return {void}\n   */\n  matchesScope (element, selectorText) {\n    let scope = this.getScopeTag(element)\n    return selectorText.match(scope)\n  }\n\n  /**\n   * Returns a regex to determine if an element is scoped\n   * @param  @param {HTMLElement}  element\n   * @param  {RegExp}  regex\n   * @return {RegExp}\n   */\n  getScopeTag (element) {\n    // grab the scope tag from the element, such as `v-12jn123n123`\n    let scope = Object.keys(element.dataset).find(key => key.match(/v-/))\n    if (!scope) {\n      console.error('[VueElementQuery] Vue element queries only work on scoped stylesheets. Did you forget to add `scoped` to your stylesheet?', element)\n      return null\n    }\n    return new RegExp(scope)\n  }\n\n  /**\n   * Set the string for the min-width attribute that will be used for element\n   * queries. Example result: \"500px 600px 900px\"\n   * @param {Number} elementWidth\n   */\n  setMinWidth (elementWidth) {\n    return this.breakpoints['min-width'].reduce((string, key) => {\n      return elementWidth >= key ? string + key + 'px ' : string\n    }, '').slice(0, -1)\n  }\n\n  /**\n   * Set the string for the max-width attribute that will be used for element\n   * queries. Example result: \"500px 600px 900px\"\n   * @param {Number} elementWidth\n   */\n  setMaxWidth (elementWidth) {\n    return this.breakpoints['max-width'].reduce((string, key) => {\n      return elementWidth <= key ? string + key + 'px ' : string\n    }, '').slice(0, -1)\n  }\n\n  /**\n   * Crawl the document for stylesheets, and if valid for reading rules,\n   * pass to a callback function with the rules as the first argument.\n   * @param  {HTMLDocument}  document\n   * @param  {Function}  callback\n   * @return {void}\n   */\n  crawlStylesheets (document, callback) {\n    for (var i = 0, j = document.styleSheets.length; i < j; i++) {\n      this.ifValidRules(document.styleSheets[i], callback)\n    }\n  }\n\n  /**\n   * Determine if the rules are valid for crawling on a stylesheet.\n   * @param  {CSSStyleSheet}  stylesheet\n   * @param  {Function}  callback\n   * @return {void}\n   */\n  ifValidRules (stylesheet, callback) {\n    if (stylesheet.href === null && stylesheet.cssRules) {\n      callback(stylesheet.cssRules)\n    }\n  }\n\n  /**\n   * Read from the list of rules and build a map\n   * @param  {CSSRuleList}  rules\n   * @return {[type]}\n   */\n  readRules (rules, callback) {\n    this.crawlRules(rules, selectorText => {\n      callback(selectorText)\n    })\n  }\n\n  /**\n   * Crawl rules and execute a callback if the rule has valid\n   * selectorText.\n   * @param  {CSSRuleList}  rules\n   * @param  {Function}  callback\n   * @return {void}\n   */\n  crawlRules (rules, callback) {\n    for (var i = 0, j = rules.length; i < j; i++) {\n      if (rules[i].selectorText) this.getValidSelector(rules[i].selectorText, callback)\n    }\n  }\n\n  /**\n   * Check for a valid selector\n   * @param  {String}  selectorText\n   * @param  {Function} callback\n   * @return {void}\n   */\n  getValidSelector (selectorText, callback) {\n    // List of valid selectors\n    const matches = ['min-width', 'max-width']\n    // Check selector for a match, and if so execute the callback.\n    matches.forEach(selector => {\n      if (selectorText.indexOf(selector) !== -1) {\n        let regex = new RegExp(`${selector}~=\"(.*)px\"]`)\n        callback({\n          selectorText,\n          selector,\n          value: selectorText.match(regex)[1]\n        })\n      }\n    })\n  }\n}\n","import VueElementQuery from './VueElementQuery'\nimport ResizeSensor from 'css-element-queries/src/ResizeSensor'\n\nexport default {\n  install (Vue, options) {\n    Vue.directive('query', {\n      bind (element) {\n        const veq = new VueElementQuery(ResizeSensor, element)\n        element.__veq = veq\n      },\n      update (element) {\n        const state = element.__veq\n        if (state) {\n          state.setInitialResize(element)\n        }\n      },\n      unbind (element) {\n        delete element.__veq\n        ResizeSensor.detach(element)\n      }\n    })\n  }\n}\n","import './setPublicPath'\nimport mod from '~entry'\nexport default mod\nexport * from '~entry'\n","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  let i\n  if ((i = window.document.currentScript) && (i = i.src.match(/(.+\\/)[^/]+\\.js$/))) {\n    __webpack_public_path__ = i[1] // eslint-disable-line\n  }\n}\n"],"sourceRoot":""}